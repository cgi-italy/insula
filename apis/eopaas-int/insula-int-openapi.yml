openapi: 3.0.3
info:
  title: Insula Platform APIs
  version: '2.0'
servers:
  - url: https://int.insula.earth/secure/api/v2.0
    description: Insula integration environment
security:
  - oauth2Password:
      - openid
tags:
  - name: collections
    description: Platform collection related operations. A collection is a container for files of a certain type.
paths:
  /collections:
    get:
      summary: Get platform collections.
      operationId: getCollections
      tags:
        - collections
      parameters:
        - $ref: '#/components/parameters/collectionProjectionParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: A list of platform collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionSearchResults'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      summary: Create a platform collection
      operationId: createCollection
      tags:
        - collections
      requestBody:
        description: |-
          The collection metadata. Regarding the 'fileType' field, use:
          - REFERENCE_DATA: For a collection where local data can be uploaded through the platformFiles APIs
          - OUTPUT_PRODUCT: For collection used for storing the results of a processing
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionBaseMetadata'
      responses:
        '201':
          description: Collection succesfully created. ID of the resource can be found in the "self" href of the "_links" object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCreateOrUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
  /collections/{collectionId}:
    get:
      summary: Get collection metadata.
      operationId: getCollectionById
      tags:
        - collections
      parameters:
        - name: collectionId
          in: path
          description: Collection ID
          required: true
          schema:
            $ref: '#/components/schemas/PlatformIdentifier'
        - $ref: '#/components/parameters/collectionProjectionParam'
      responses:
        '200':
          description: The collection metadata
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CollectionShortProjection'
                  - $ref: '#/components/schemas/CollectionDetailedProjection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    patch:
      summary: Update a platform collection
      operationId: updateCollection
      tags:
        - collections
      parameters:
        - name: collectionId
          in: path
          description: Collection ID
          required: true
          schema:
            $ref: '#/components/schemas/PlatformIdentifier'
      requestBody:
        description: The collection metadata.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  title: Collection name
                  type: string
                description:
                  title: Collection description
                  type: string
                productsType:
                  title: Collection product types
                  description: Define the type of products contained in the collections. A free text field that can be used for filtering in search
                  type: string
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionCreateOrUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      summary: Delete platform collection
      operationId: deleteCollection
      tags:
        - collections
      parameters:
        - name: collectionId
          in: path
          description: Collection ID
          required: true
          schema:
            $ref: '#/components/schemas/PlatformIdentifier'
      responses:
        '204':
          description: Deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /collections/search/parametricFind:
    get:
      summary: Search for platform collections.
      operationId: searchCollections
      description: Allow to search for platform collections by text, file type, product type, owner
      tags:
        - collections
      parameters:
        - in: query
          name: filter
          description: The search string
          schema:
            type: string
        - in: query
          name: fileType
          required: false
          description: The collection file type
          schema:
            $ref: '#/components/schemas/PlatformFileType'
        - in: query
          name: productsType
          required: false
          description: A list of collection product types
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: notProductsType
          required: false
          description: A list of collection product types to omit from the result
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/collectionProjectionParam'
        - $ref: '#/components/parameters/ownerParam'
        - $ref: '#/components/parameters/notOwnerParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: A list of platform collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionSearchResults'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  securitySchemes:
    oauth2Password:
      type: oauth2
      flows:
        password:
          tokenUrl: https://identity.int.insula.earth/realms/eopaas/protocol/openid-connect/token
          scopes:
            openid: api access
  parameters:
    collectionProjectionParam:
      in: query
      name: projection
      description: The collection projection. Determines the schema of the search results
      required: false
      schema:
        type: string
        default: ShortCollection
        enum:
          - shortCollection
          - detailedCollection
    notOwnerParam:
      in: query
      name: notOwner
      required: false
      schema:
        type: string
        format: uri-template
        pattern: ^https://int.insula.earth/secure/api/v2\.0/users/[0-9]+$
    ownerParam:
      in: query
      name: owner
      required: false
      description: The owner of the resource. Must be provided as a reference uri in the form of https://int.insula.earth/secure/api/v2.0/users/{userId}
      schema:
        type: string
        title: Resource owner
        format: uri-template
        pattern: ^https://int.insula.earth/secure/api/v2\.0/users/[0-9]+$
    pageNumberParam:
      in: query
      name: page
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      description: The pagination page number.
    pageSizeParam:
      in: query
      name: size
      required: false
      schema:
        type: integer
        minimum: 0
        default: 20
      description: The number of items per page.
  schemas:
    CollectionBaseMetadata:
      type: object
      title: Collection metadata
      properties:
        name:
          title: Collection name
          type: string
        description:
          title: Collection description
          type: string
        fileType:
          $ref: '#/components/schemas/PlatformFileType'
        productsType:
          title: Collection product types
          description: Define the type of products contained in the collections. A free text field that can be used for filtering in search
          type: string
      required:
        - name
        - fileType
    CollectionCreateOrUpdateResponse:
      type: object
      title: Collection create/update response
      allOf:
        - $ref: '#/components/schemas/CollectionBaseMetadata'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  type: object
                  title: Self link
                  description: A link to the created resource
                  properties:
                    href:
                      type: string
                      format: uri
                      pattern: ^https://int.insula.earth/secure/api/v2\.0/collections/[0-9]+
                      example: https://int.insula.earth/secure/api/v2.0/collections/42
                  required:
                    - href
              required:
                - self
            _embedded:
              type: object
              properties:
                owner:
                  $ref: '#/components/schemas/User'
          required:
            - _links
            - _embedded
    CollectionDetailedProjection:
      type: object
      title: Collection detailed projection
      allOf:
        - $ref: '#/components/schemas/CollectionShortProjection'
        - type: object
          properties:
            size:
              type: number
              title: Collection size
          required:
            - size
    CollectionSearchResults:
      type: object
      title: Collection search results
      properties:
        page:
          $ref: '#/components/schemas/PagingState'
        _embedded:
          type: object
          properties:
            collections:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/CollectionShortProjection'
                  - $ref: '#/components/schemas/CollectionDetailedProjection'
          required:
            - collections
      required:
        - page
        - _embedded
    CollectionShortProjection:
      type: object
      title: Collection short projection
      allOf:
        - $ref: '#/components/schemas/CollectionBaseMetadata'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/PlatformIdentifier'
            identifier:
              type: string
              format: uuid
              title: Catalogue identifier
            owner:
              $ref: '#/components/schemas/User'
          required:
            - id
            - identifier
            - owner
    ErrorResponse:
      type: object
      title: Error response
      properties:
        status_code:
          type: integer
        status:
          type: string
      required:
        - status
    PagingState:
      type: object
      title: Pagination state
      description: test desc
      properties:
        number:
          type: number
          title: Current page number
        size:
          type: number
          title: Page size
        totalElements:
          type: number
          title: Total elements
        totalPages:
          type: number
          title: Total pages
      required:
        - number
        - size
    PlatformFileType:
      type: string
      title: Platform file type
      description: |-
        The platform file type.
        - REFERENCE_DATA indicates user uploaded data.
        - OUTPUT_PRODUCT indicates processing outputs.
      enum:
        - REFERENCE_DATA
        - OUTPUT_PRODUCT
        - EXTERNAL_PRODUCT
        - REMOTE_DATA
    PlatformIdentifier:
      type: integer
      title: Platform identifier
    User:
      type: object
      title: Platform user
      properties:
        id:
          type: number
        name:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
    UserRole:
      type: string
      title: User role
      enum:
        - GUEST
        - USER
        - EXPERT_USER
        - CONTENT_AUTHORITY
        - ADMIN
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              status:
                type: integer
              error:
                type: string
              path:
                type: string
          example:
            timestamp: '1982-03-02T00:00:00Z'
            status: 400
            error: Bad request
            path: https://int.insula.earth/secure/api/v2.0/users
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: The specified resource was not found
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status_code: 403
            status: Invalid token
